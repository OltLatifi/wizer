[{"C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\index.js":"1","C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\App.js":"2","C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\YourHomework.js":"3","C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\HomeworkForm.js":"4","C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\ListOfHomework.js":"5","C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\SubjectForm.js":"6","C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\Filters.js":"7","C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\Homework.js":"8","C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\pomodoro\\Pomodoro.js":"9"},{"size":238,"mtime":1626452363661,"results":"10","hashOfConfig":"11"},{"size":5274,"mtime":1626517684900,"results":"12","hashOfConfig":"11"},{"size":5943,"mtime":1626516446402,"results":"13","hashOfConfig":"11"},{"size":3227,"mtime":1626516446201,"results":"14","hashOfConfig":"11"},{"size":1556,"mtime":1626516446245,"results":"15","hashOfConfig":"11"},{"size":1224,"mtime":1626516446322,"results":"16","hashOfConfig":"11"},{"size":2593,"mtime":1626516446084,"results":"17","hashOfConfig":"11"},{"size":1655,"mtime":1626516446161,"results":"18","hashOfConfig":"11"},{"size":4270,"mtime":1626543329312,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1gz0mo9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\index.js",[],["40","41"],"C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\App.js",["42"],"import './css/App.css'\r\nimport axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport YourHomework from './components/dashboard/YourHomework'\r\nimport Pomodoro from './components/pomodoro/Pomodoro'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n    // the state that handles the homework\r\n    const[homework, setHomework] = useState([]);\r\n    // menu items are what is actually going to be displayed, when we filter we change this hook,\r\n    // not the data that we get from the api\r\n    const[menuItems, setMenuItems] = useState([]);\r\n\r\n    // buttons for filtering by subjects\r\n    const[subjects, setSubjects] = useState([]);\r\n\r\n    // data for the homework form\r\n    const[title, setTitle] = useState('')\r\n    const[date, setDate] = useState('')\r\n    const[description, setDescription] = useState('')\r\n    const[finished_, setFinished_] = useState('')\r\n    const[subjects_, setSubjects_] = useState('')\r\n    // data for the subject form\r\n    const[subjectText, setSubjectText] = useState('')\r\n\r\n    // the one used to delete the subjects\r\n    const[showSubjectDelete, setShowSubjectDelete] = useState(false)    \r\n    // data for the subject form\r\n    const[showSubjectForm, setShowSubjectForm] = useState(false)\r\n    \r\n\r\n    // get the homework from the api\r\n    const getHomework=()=>{\r\n      axios.get('http://localhost:8000/api/see-homework/')\r\n      .then(response => {\r\n          setHomework(response.data)\r\n          setMenuItems(response.data)\r\n      })\r\n  \r\n      }\r\n    // get the subjects from the api\r\n    const getSubjects=()=>{\r\n        axios.get('http://localhost:8000/api/see-subject/')\r\n        .then(response => {\r\n            setSubjects(response.data)\r\n        })\r\n    }\r\n\r\n    // on render call the function that gets the homework data\r\n    useEffect(()=> {\r\n        getHomework()\r\n        getSubjects()\r\n    }, [])\r\n\r\n\r\n    // submit button on the homework form\r\n    const buttonPressed=()=>{\r\n      // textInput.current.focus();\r\n\r\n      let formData = new FormData()\r\n\r\n      formData.append('title', title)\r\n      formData.append('date', `${date.split(\" \")[0]}T${date.split(\" \")[1]}:00Z`) // just making it compatible \r\n      formData.append('description', description) //with the api\r\n      formData.append('finished', finished_)\r\n      formData.append('subject', subjects_)\r\n\r\n      axios.post(\"http://localhost:8000/api/homework/\", formData)\r\n      .then((response) =>getHomework())\r\n      .then(response=> alert('Homework added succesfully!'))\r\n      .catch((error) =>alert(`${error.message}\\nTitle and subject are required to create homework.`))\r\n\r\n\r\n  }\r\n  // updates homework(finished or not)\r\n  const updateHomework=(title, finished, subject, id) => {\r\n      let formData = new FormData()\r\n      \r\n      formData.append('title', title)\r\n      formData.append('finished', finished)\r\n      formData.append('subject', subject)\r\n      \r\n      console.log(formData)\r\n      axios.put(`http://localhost:8000/api/update-homework/${id}`, formData)\r\n      .then((response) =>{\r\n          getHomework()\r\n          setHomework([response.data, ...homework])\r\n      })\r\n\r\n  }\r\n\r\n  // deletes the homework\r\n  const deleteHomework =(id)=>{\r\n      axios.delete(`http://localhost:8000/api/delete-homework/${id}`, {\r\n        data: {\r\n          source: 'source'\r\n        }\r\n      }).then(response=>getHomework())\r\n      \r\n    }\r\n\r\n\r\n    // post request for the subject form\r\n    const createSubject=()=>{\r\n      let formData = new FormData()\r\n      formData.append('name', subjectText)\r\n      axios.post(\"http://localhost:8000/api/subject/\", formData)\r\n      .then((response) =>getSubjects())\r\n      .then((response)=> setShowSubjectForm(false))\r\n      .catch((error) =>alert(`${error.message}\\nYou need to provide a name for the subject.`))\r\n  }\r\n\r\n  // deletes the subject\r\n  const deleteSubject_ =(id)=>{\r\n    axios.delete(`http://localhost:8000/api/delete-subject/${id}`, {\r\n      data: {\r\n        source: 'source'\r\n      }\r\n    }).then(response=>getSubjects())\r\n    .then(response=>setShowSubjectDelete(false))\r\n    \r\n  }\r\n  \r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/dashboard'>\r\n\r\n        <div className=\"App\">\r\n          <YourHomework\r\n            homework={homework}\r\n            setMenuItems={setMenuItems}\r\n            setSubjectText={setSubjectText}\r\n            createSubject={createSubject}\r\n            setTitle={setTitle}\r\n            setDate={setDate}\r\n            setDescription={setDescription}\r\n            setFinished_={setFinished_}\r\n            setSubjects_={setSubjects_}\r\n            subjects={subjects}\r\n            buttonPressed={buttonPressed}\r\n            menuItems={menuItems}\r\n            updateHomework={updateHomework}\r\n            deleteHomework={deleteHomework}\r\n            deleteSubject_={deleteSubject_}\r\n            showSubjectDelete={showSubjectDelete}\r\n            setShowSubjectDelete={setShowSubjectDelete}\r\n            showSubjectForm={showSubjectForm}\r\n            setShowSubjectForm={setShowSubjectForm}\r\n            />\r\n        </div>\r\n\r\n        </Route>\r\n        <Route path=\"/pomodoro\">\r\n          <Pomodoro/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\YourHomework.js",[],"C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\HomeworkForm.js",[],"C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\ListOfHomework.js",[],"C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\SubjectForm.js",[],"C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\Filters.js",[],"C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\dashboard\\Homework.js",[],"C:\\Users\\Olti\\Desktop\\wizer\\wizer-web\\src\\components\\pomodoro\\Pomodoro.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":11,"column":3,"nodeType":"49","messageId":"50","endLine":11,"endColumn":7},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]