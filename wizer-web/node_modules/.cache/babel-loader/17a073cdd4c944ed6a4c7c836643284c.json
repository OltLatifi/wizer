{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olti\\\\Desktop\\\\wizer\\\\wizer-web\\\\src\\\\components\\\\pomodoro\\\\Pomodoro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: \"10%\"\n  },\n  circle: {\n    width: \"400px\",\n    height: \"400px\",\n    border: \"2px dashed aqua\",\n    borderRadius: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    backgroundColor: \"#2d2d2d\",\n    color: \"aqua\"\n  }\n});\n\nfunction Pomodoro() {\n  _s();\n\n  const classes = useStyles();\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [rest, setRest] = useState(5);\n  const [displayMessage, setDisplayMessage] = useState(false);\n  const [start, setStart] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n\n  const timer = () => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          let minutes_ = displayMessage ? minutes - 1 : rest - 1;\n          let seconds = 59;\n          setSeconds(seconds);\n          setMinutes(minutes_);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  };\n\n  const initiateTimer = () => {\n    if (start) {\n      timer();\n    }\n  };\n\n  const renderSettingsButtons = () => {\n    if (showSettings) {\n      const workButtons = [15, 25, 35];\n      const restButtons = [5, 10, 15];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body\",\n          children: \"Set the work duration: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), workButtons.map(button => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              if (!displayMessage) {\n                setMinutes(button - 1);\n              }\n            },\n            children: [button, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body\",\n          children: \"Set the rest duration: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), restButtons.map(button => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setRest(button);\n            },\n            children: [button, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true);\n    }\n  };\n\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: displayMessage && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            color: \"#fff\"\n          },\n          children: \"Break time!\\uD83C\\uDF89 New session starts in:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.circle,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          children: [timerMinutes, \":\", timerSeconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setStart(!start),\n          style: {\n            color: \"aqua\"\n          },\n          children: start ? \"Stop\" : \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), initiateTimer()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: \"8%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowSettings(!showSettings),\n        style: {\n          height: 40\n        },\n        children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"1%\",\n          marginTop: \"-2%\"\n        },\n        children: renderSettingsButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Pomodoro, \"dOAsqZepELm+Y+XjH/lmiDtsvG4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Pomodoro;\nexport default Pomodoro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"sources":["C:/Users/Olti/Desktop/wizer/wizer-web/src/components/pomodoro/Pomodoro.js"],"names":["React","useState","Button","Typography","SettingsIcon","makeStyles","useStyles","root","display","justifyContent","flexDirection","alignItems","marginTop","circle","width","height","border","borderRadius","backgroundColor","color","Pomodoro","classes","minutes","setMinutes","seconds","setSeconds","rest","setRest","displayMessage","setDisplayMessage","start","setStart","showSettings","setShowSettings","timer","interval","setInterval","clearInterval","minutes_","initiateTimer","renderSettingsButtons","workButtons","restButtons","map","button","timerMinutes","timerSeconds","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"10%\",\r\n  },\r\n  circle: {\r\n    width: \"400px\",\r\n    height: \"400px\",\r\n    border: \"2px dashed aqua\",\r\n    borderRadius: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"#2d2d2d\",\r\n    color: \"aqua\",\r\n  },\r\n});\r\n\r\nfunction Pomodoro() {\r\n  const classes = useStyles();\r\n\r\n  const [minutes, setMinutes] = useState(25);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  const [rest, setRest] = useState(5);\r\n  const [displayMessage, setDisplayMessage] = useState(false);\r\n  const [start, setStart] = useState(false);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n\r\n  const timer = () => {\r\n    let interval = setInterval(() => {\r\n      clearInterval(interval);\r\n\r\n      if (seconds === 0) {\r\n        if (minutes !== 0) {\r\n          setSeconds(59);\r\n          setMinutes(minutes - 1);\r\n        } else {\r\n          let minutes_ = displayMessage ? minutes - 1 : rest - 1;\r\n          let seconds = 59;\r\n\r\n          setSeconds(seconds);\r\n          setMinutes(minutes_);\r\n          setDisplayMessage(!displayMessage);\r\n        }\r\n      } else {\r\n        setSeconds(seconds - 1);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const initiateTimer = () => {\r\n    if (start) {\r\n      timer();\r\n    }\r\n  };\r\n\r\n  const renderSettingsButtons = () => {\r\n    if (showSettings) {\r\n      const workButtons = [15, 25, 35];\r\n      const restButtons = [5, 10, 15];\r\n      return (\r\n        <>\r\n          <Typography variant=\"body\">Set the work duration: </Typography>\r\n          {workButtons.map((button) => {\r\n            return (\r\n              <Button\r\n                onClick={() => {\r\n                  if (!displayMessage) {\r\n                    setMinutes(button - 1);\r\n                  }\r\n                }}\r\n              >\r\n                {button} minutes\r\n              </Button>\r\n            );\r\n          })}\r\n          <br />\r\n          <Typography variant=\"body\">Set the rest duration: </Typography>\r\n          {restButtons.map((button) => {\r\n            return (\r\n              <Button\r\n                onClick={() => {\r\n                  setRest(button);\r\n                }}\r\n              >\r\n                {button} minutes\r\n              </Button>\r\n            );\r\n          })}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\r\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <div className=\"message\">\r\n          {displayMessage && (\r\n            <Typography variant=\"h5\" style={{ color: \"#fff\" }}>\r\n              Break time!🎉 New session starts in:\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        <br />\r\n        <div className={classes.circle}>\r\n          <Typography variant=\"h1\">\r\n            {timerMinutes}:{timerSeconds}\r\n          </Typography>\r\n          <Button onClick={() => setStart(!start)} style={{ color: \"aqua\" }}>\r\n            {start ? \"Stop\" : \"Start\"}\r\n          </Button>\r\n        </div>\r\n        {initiateTimer()}\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"8%\" }}>\r\n        <Button\r\n          onClick={() => setShowSettings(!showSettings)}\r\n          style={{ height: 40 }}\r\n        >\r\n          <SettingsIcon />\r\n        </Button>\r\n        <div style={{ marginLeft: \"1%\", marginTop: \"-2%\" }}>\r\n          {renderSettingsButtons()}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n"]},"metadata":{},"sourceType":"module"}