{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olti\\\\Desktop\\\\wizer\\\\wizer-web\\\\src\\\\components\\\\authentication\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport axiosInstance from \"../../axios\"; // import { withRouter } from 'react-router';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  }\n}));\n\nfunction Register(props) {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showEmailWarning, setShowEmailWarning] = useState(false);\n  const [showPasswordWarning, setShowPasswordWarning] = useState(false);\n  const [showUsernameWarning, setUsernameWarning] = useState(false);\n\n  const buttonPressed = e => {\n    if (password === confirmPassword) {\n      if (username.split(\" \").length < 2) {\n        setUsernameWarning(false);\n      } else {\n        setUsernameWarning(true);\n      }\n\n      if (password.split(\"\").length >= 8 && (email.includes(\"@\", \"`\", \"!\", \"#\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"=\", \"+\", \"[\", \"]\", \"{\", \"}\", \";\", \":\", \"'\", '\"', \"<\", \">\", \",\", \".\", \"?\", \"/\", \"|\") || email.includes(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"))) {\n        setShowPasswordWarning(false); // if the email is not valid (doesn't contain '@example.com')\n\n        if (email.split(\"@\").length > 1) {\n          setShowEmailWarning(false);\n          const registerFormData = new FormData();\n          registerFormData.append(\"username\", username);\n          registerFormData.append(\"email\", email);\n          registerFormData.append(\"password\", password);\n          const loginFormData = new FormData();\n          loginFormData.append(\"username\", username);\n          loginFormData.append(\"password\", password);\n          axiosInstance.post(\"http://localhost:8000/api/register/\", registerFormData).then(registration => {\n            if (registration.status === 201) {\n              toast.success(\"User registered succesfully!\", {\n                position: \"top-center\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n              });\n            }\n          }).catch(error => {\n            toast.error(`Your username is already taken or contains a space.\\n${error.message}`, {\n              position: \"top-center\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined\n            });\n          });\n        } else {\n          setShowEmailWarning(true);\n        }\n      } else {\n        if (email.split(\"@\").length === 1) {\n          setShowEmailWarning(true);\n        } else {\n          setShowEmailWarning(false);\n        }\n\n        setShowPasswordWarning(true);\n      }\n    } else {\n      if (email.split(\"@\").length === 1) {\n        setShowEmailWarning(true);\n      } else {\n        setShowEmailWarning(false);\n      }\n\n      alert(\"Your password and confirmation do not match\");\n    }\n  };\n\n  const renderEmailWarning = () => {\n    if (showEmailWarning) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"70%\",\n          backgroundColor: \"#ffd1d6\",\n          color: \"black\",\n          border: \"2px solid #fca4ad\",\n          borderRadius: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Please enter a valid email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const renderPasswordWarning = () => {\n    if (showPasswordWarning) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"70%\",\n          backgroundColor: \"#ffd1d6\",\n          color: \"black\",\n          border: \"2px solid #fca4ad\",\n          borderRadius: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Please enter a password that contains 8 or more characters and includes at least a number or a symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const renderUsernameWarning = () => {\n    if (showUsernameWarning) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"70%\",\n          backgroundColor: \"#ffd1d6\",\n          color: \"black\",\n          border: \"2px solid #fca4ad\",\n          borderRadius: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Your username cannot include spaces in beetween\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          paddingBottom: \"9%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root,\n          style: {\n            margin: \"4%\"\n          },\n          method: \"post\",\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              padding: \"2%\",\n              width: \"80%\",\n              backgroundColor: \"#2d2d2d\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              component: \"h2\",\n              style: {\n                color: \"#fff\"\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: \"70%\"\n                  },\n                  onChange: e => setUsername(e.target.value),\n                  InputLabelProps: {\n                    style: {\n                      color: \"white\"\n                    }\n                  },\n                  InputProps: {\n                    style: {\n                      color: \"white\"\n                    }\n                  },\n                  label: \"Username\",\n                  variant: \"outlined\",\n                  placeholder: \"e.g. JohnDoe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), renderUsernameWarning()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: \"70%\"\n                  },\n                  onChange: e => setEmail(e.target.value),\n                  InputLabelProps: {\n                    style: {\n                      color: \"white\"\n                    }\n                  },\n                  InputProps: {\n                    style: {\n                      color: \"white\"\n                    }\n                  },\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  placeholder: \"e.g. name@company.com\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), renderEmailWarning()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: \"70%\"\n                  },\n                  onChange: e => setPassword(e.target.value),\n                  InputLabelProps: {\n                    style: {\n                      color: \"white\"\n                    }\n                  },\n                  InputProps: {\n                    style: {\n                      color: \"white\"\n                    }\n                  },\n                  label: \"Password\",\n                  type: \"password\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: \"70%\"\n                  },\n                  onChange: e => setConfirmPassword(e.target.value),\n                  InputLabelProps: {\n                    style: {\n                      color: \"white\"\n                    }\n                  },\n                  InputProps: {\n                    style: {\n                      color: \"white\"\n                    }\n                  },\n                  label: \"Confirm password\",\n                  type: \"password\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), renderPasswordWarning(), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    margin: \"1%\",\n                    width: \"70%\",\n                    backgroundColor: \"#1a1a1aff\",\n                    color: \"white\"\n                  },\n                  variant: \"contained\",\n                  onClick: buttonPressed,\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"V9RlqlQK5017JNNFlaLLo6zi8PE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Olti/Desktop/wizer/wizer-web/src/components/authentication/Register.js"],"names":["React","useState","makeStyles","TextField","Button","Typography","Card","ToastContainer","toast","axiosInstance","useStyles","theme","root","flexGrow","margin","spacing","width","Register","props","classes","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","showEmailWarning","setShowEmailWarning","showPasswordWarning","setShowPasswordWarning","showUsernameWarning","setUsernameWarning","buttonPressed","e","split","length","includes","registerFormData","FormData","append","loginFormData","post","then","registration","status","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","catch","error","message","alert","renderEmailWarning","backgroundColor","color","border","borderRadius","renderPasswordWarning","renderUsernameWarning","display","flexDirection","paddingBottom","padding","target","value","style"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nimport axiosInstance from \"../../axios\";\r\n// import { withRouter } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Register(props) {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [showEmailWarning, setShowEmailWarning] = useState(false);\r\n  const [showPasswordWarning, setShowPasswordWarning] = useState(false);\r\n  const [showUsernameWarning, setUsernameWarning] = useState(false);\r\n\r\n  const buttonPressed = (e) => {\r\n    if (password === confirmPassword) {\r\n      if (username.split(\" \").length < 2) {\r\n        setUsernameWarning(false);\r\n      } else {\r\n        setUsernameWarning(true);\r\n      }\r\n      if (\r\n        password.split(\"\").length >= 8 &&\r\n        (email.includes(\r\n          \"@\",\r\n          \"`\",\r\n          \"!\",\r\n          \"#\",\r\n          \"$\",\r\n          \"%\",\r\n          \"^\",\r\n          \"&\",\r\n          \"*\",\r\n          \"(\",\r\n          \")\",\r\n          \"-\",\r\n          \"=\",\r\n          \"+\",\r\n          \"[\",\r\n          \"]\",\r\n          \"{\",\r\n          \"}\",\r\n          \";\",\r\n          \":\",\r\n          \"'\",\r\n          '\"',\r\n          \"<\",\r\n          \">\",\r\n          \",\",\r\n          \".\",\r\n          \"?\",\r\n          \"/\",\r\n          \"|\"\r\n        ) ||\r\n          email.includes(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"))\r\n      ) {\r\n        setShowPasswordWarning(false);\r\n\r\n        // if the email is not valid (doesn't contain '@example.com')\r\n        if (email.split(\"@\").length > 1) {\r\n          setShowEmailWarning(false);\r\n\r\n          const registerFormData = new FormData();\r\n          registerFormData.append(\"username\", username);\r\n          registerFormData.append(\"email\", email);\r\n          registerFormData.append(\"password\", password);\r\n\r\n          const loginFormData = new FormData();\r\n          loginFormData.append(\"username\", username);\r\n          loginFormData.append(\"password\", password);\r\n\r\n          axiosInstance\r\n            .post(\"http://localhost:8000/api/register/\", registerFormData)\r\n            .then((registration) => {\r\n              if (registration.status === 201) {\r\n                toast.success(\"User registered succesfully!\", {\r\n                  position: \"top-center\",\r\n                  autoClose: 5000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              toast.error(\r\n                `Your username is already taken or contains a space.\\n${error.message}`,\r\n                {\r\n                  position: \"top-center\",\r\n                  autoClose: 5000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                }\r\n              );\r\n            });\r\n        } else {\r\n          setShowEmailWarning(true);\r\n        }\r\n      } else {\r\n        if (email.split(\"@\").length === 1) {\r\n          setShowEmailWarning(true);\r\n        } else {\r\n          setShowEmailWarning(false);\r\n        }\r\n        setShowPasswordWarning(true);\r\n      }\r\n    } else {\r\n      if (email.split(\"@\").length === 1) {\r\n        setShowEmailWarning(true);\r\n      } else {\r\n        setShowEmailWarning(false);\r\n      }\r\n      alert(\"Your password and confirmation do not match\");\r\n    }\r\n  };\r\n\r\n  const renderEmailWarning = () => {\r\n    if (showEmailWarning) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: \"70%\",\r\n            backgroundColor: \"#ffd1d6\",\r\n            color: \"black\",\r\n            border: \"2px solid #fca4ad\",\r\n            borderRadius: 4,\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\">\r\n            Please enter a valid email address\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderPasswordWarning = () => {\r\n    if (showPasswordWarning) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: \"70%\",\r\n            backgroundColor: \"#ffd1d6\",\r\n            color: \"black\",\r\n            border: \"2px solid #fca4ad\",\r\n            borderRadius: 4,\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\">\r\n            Please enter a password that contains 8 or more characters and\r\n            includes at least a number or a symbol\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderUsernameWarning = () => {\r\n    if (showUsernameWarning) {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: \"70%\",\r\n            backgroundColor: \"#ffd1d6\",\r\n            color: \"black\",\r\n            border: \"2px solid #fca4ad\",\r\n            borderRadius: 4,\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\">\r\n            Your username cannot include spaces in beetween\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <center>\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"row\", paddingBottom: \"9%\" }}\r\n        >\r\n          <form\r\n            className={classes.root}\r\n            style={{ margin: \"4%\" }}\r\n            method=\"post\"\r\n            autoComplete=\"off\"\r\n          >\r\n            <Card\r\n              style={{\r\n                padding: \"2%\",\r\n                width: \"80%\",\r\n                backgroundColor: \"#2d2d2d\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h2\" component=\"h2\" style={{ color: \"#fff\" }}>\r\n                Register\r\n              </Typography>\r\n              <br />\r\n              <div className=\"form_\">\r\n                <div>\r\n                  <TextField\r\n                    style={{ width: \"70%\" }}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    InputLabelProps={{ style: { color: \"white\" } }}\r\n                    InputProps={{ style: { color: \"white\" } }}\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"e.g. JohnDoe\"\r\n                  />\r\n                  {renderUsernameWarning()}\r\n                </div>\r\n\r\n                <div>\r\n                  <TextField\r\n                    style={{ width: \"70%\" }}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    InputLabelProps={{ style: { color: \"white\" } }}\r\n                    InputProps={{ style: { color: \"white\" } }}\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"e.g. name@company.com\"\r\n                  />\r\n                  {renderEmailWarning()}\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    style={{ width: \"70%\" }}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    InputLabelProps={{ style: { color: \"white\" } }}\r\n                    InputProps={{ style: { color: \"white\" } }}\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    style={{ width: \"70%\" }}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    InputLabelProps={{ style: { color: \"white\" } }}\r\n                    InputProps={{ style: { color: \"white\" } }}\r\n                    label=\"Confirm password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </div>\r\n                {renderPasswordWarning()}\r\n                <div>\r\n                  <Button\r\n                    style={{\r\n                      margin: \"1%\",\r\n                      width: \"70%\",\r\n                      backgroundColor: \"#1a1a1aff\",\r\n                      color: \"white\",\r\n                    }}\r\n                    variant=\"contained\"\r\n                    onClick={buttonPressed}\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </form>\r\n        </div>\r\n      </center>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}