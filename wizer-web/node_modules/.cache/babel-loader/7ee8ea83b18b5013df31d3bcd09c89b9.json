{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Olti\\\\Desktop\\\\wizer\\\\wizer-web\\\\src\\\\components\\\\pomodoro\\\\Pomodoro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from '@material-ui/core/Button'; // import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import Card from '@material-ui/core/Card';\n\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    margin: '10% 0%',\n    justifyContent: 'center',\n    fontSize: '500%'\n  },\n  circle: {\n    width: 500,\n    height: 500,\n    border: '5px dashed black',\n    borderRadius: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#f0f0f0'\n  }\n});\n\nfunction Pomodoro() {\n  _s();\n\n  const classes = useStyles();\n  const [minutes, setMinutes] = useState(1);\n  const [seconds, setSeconds] = useState(0);\n  const [displayMessage, setDisplayMessage] = useState(false);\n  const [start, setStart] = useState(false);\n\n  const timer = () => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          let minutes = displayMessage ? 24 : 4;\n          let seconds = 59;\n          setSeconds(seconds);\n          setMinutes(minutes);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  };\n\n  const initiateTimer = () => {\n    if (start) {\n      timer();\n    }\n  };\n\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: displayMessage && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          children: \"Break time! New session starts in:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.circle,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          children: [timerMinutes, \":\", timerSeconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setStart(!start),\n          children: start ? 'Stop' : 'Start'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), initiateTimer()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setStart(!start),\n      children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Pomodoro, \"yumEA9Z8K+nFCyPWcuCF7KlQ0mU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Pomodoro;\nexport default Pomodoro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"sources":["C:/Users/Olti/Desktop/wizer/wizer-web/src/components/pomodoro/Pomodoro.js"],"names":["React","useState","Button","Typography","SettingsIcon","makeStyles","useStyles","root","display","margin","justifyContent","fontSize","circle","width","height","border","borderRadius","alignItems","flexDirection","backgroundColor","Pomodoro","classes","minutes","setMinutes","seconds","setSeconds","displayMessage","setDisplayMessage","start","setStart","timer","interval","setInterval","clearInterval","initiateTimer","timerMinutes","timerSeconds"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\r\n// import Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        margin: '10% 0%',\r\n        justifyContent: 'center',\r\n        fontSize: '500%',\r\n    },\r\n    circle:{\r\n        width: 500,\r\n        height: 500,\r\n        border: '5px dashed black',\r\n        borderRadius: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection:'column',\r\n        backgroundColor:'#f0f0f0',\r\n    }\r\n  });\r\n\r\n\r\n\r\nfunction Pomodoro() {\r\n    const classes = useStyles()\r\n    \r\n    const[minutes, setMinutes] = useState(1);\r\n    const[seconds, setSeconds] = useState(0);\r\n    const[displayMessage, setDisplayMessage] = useState(false);\r\n    const[start, setStart] = useState(false);\r\n  \r\n    const timer=()=>{\r\n        let interval = setInterval(() => {\r\n            clearInterval(interval);\r\n    \r\n            if (seconds === 0) {\r\n                if (minutes !== 0) {\r\n                setSeconds(59);\r\n                setMinutes(minutes - 1);\r\n                } else {\r\n                let minutes = displayMessage ? 24 : 4;\r\n                let seconds = 59;\r\n    \r\n                setSeconds(seconds);\r\n                setMinutes(minutes);\r\n                setDisplayMessage(!displayMessage);\r\n                }\r\n            } else {\r\n                setSeconds(seconds - 1);\r\n            }\r\n            }, 1000)\r\n    }\r\n\r\n    const initiateTimer=()=>{\r\n        if(start){\r\n            timer()\r\n        }\r\n    }\r\n\r\n    const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\r\n    const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.root}>\r\n        <div className=\"message\">\r\n            {displayMessage && <Typography variant=\"h1\">Break time! New session starts in:</Typography>}\r\n        </div>\r\n        <div className={classes.circle}>\r\n            <Typography variant=\"h1\">\r\n                {timerMinutes}:{timerSeconds}\r\n            </Typography>\r\n            <Button onClick={()=>setStart(!start)}>{start? 'Stop': 'Start'}</Button>\r\n        </div>\r\n        {initiateTimer()}\r\n        </div>\r\n        <Button onClick={()=>setStart(!start)}><SettingsIcon/></Button>\r\n        </>\r\n    );\r\n    }\r\n\r\nexport default Pomodoro\r\n"]},"metadata":{},"sourceType":"module"}